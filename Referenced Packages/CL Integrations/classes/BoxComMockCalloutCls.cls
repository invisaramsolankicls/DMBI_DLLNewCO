/*
This file is generated and isn't the actual source code for this
managed global class.
This read-only file shows the class's global constructors,
methods, variables, and properties.
To enable code to compile, all methods return null.
*/
global class BoxComMockCalloutCls {
    global BoxComMockCalloutCls() {

    }
global class BoxComCalloutForCreateFolder implements System.HttpCalloutMock {
    global BoxComCalloutForCreateFolder() {

    }
    global System.HttpResponse respond(System.HttpRequest req) {
        return null;
    }
}
global class BoxComCalloutForGetFolderInfo implements System.HttpCalloutMock {
    global BoxComCalloutForGetFolderInfo() {

    }
    global System.HttpResponse respond(System.HttpRequest req) {
        return null;
    }
}
global class BoxComCalloutForUploadFile implements System.HttpCalloutMock {
    global BoxComCalloutForUploadFile() {

    }
    global System.HttpResponse respond(System.HttpRequest req) {
        return null;
    }
}
global class BoxComErrorMockResponse implements System.HttpCalloutMock {
    global BoxComErrorMockResponse() {

    }
    global System.HttpResponse respond(System.HttpRequest req) {
        return null;
    }
}
global class BoxComForUnauthorizedAccess implements System.HttpCalloutMock {
    global BoxComForUnauthorizedAccess() {

    }
    global System.HttpResponse respond(System.HttpRequest req) {
        return null;
    }
}
global class CreateFolderMultipleCallout implements System.HttpCalloutMock {
    global CreateFolderMultipleCallout() {

    }
    global System.HttpResponse respond(System.HttpRequest req) {
        return null;
    }
}
global class GetFolderInfoMultipleCallout implements System.HttpCalloutMock {
    global GetFolderInfoMultipleCallout() {

    }
    global System.HttpResponse respond(System.HttpRequest req) {
        return null;
    }
}
global class UploadFileMultipleCallout implements System.HttpCalloutMock {
    global UploadFileMultipleCallout() {

    }
    global System.HttpResponse respond(System.HttpRequest req) {
        return null;
    }
}
}
